default:
  image: node:17.3.1

stages:
  - test
  - build
  - deploy

.runs-only: &run_only
  only:
    refs:
      - main

lint-test:
  stage: test
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 1
    - echo "No lint issues found."

build-image:
  <<: *run_only
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"

deploy:
  <<: *run_only
  stage: deploy
  variables:
    CLEAR_COMMAND: $(docker image ls -f 'dangling=true' -q)
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_KEY")
    - mkdir -p ~/.ssh
  script:
    - echo $SSH_HOST
    - echo "ssh $SSH_HOST 'cd ~/;
        docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com;
        docker pull "$CI_REGISTRY_IMAGE:latest";
        docker stop dev_checklist;
        docker rm dev_checklist;
        docker image rmi $CLEAR_COMMAND;
        docker run --restart always -d --name=dev_checklist -p 3000:3000 registry.gitlab.com/proxyone/checklist_frontend'
        " > docker
    - eval $(cat docker)
  when: on_success
